{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:@tanstack/eslint-plugin-query/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  "plugins": ["@typescript-eslint", "react", "simple-import-sort", "@tanstack/query"],
  "rules": {
    "indent": ["error", 2, { "SwitchCase": 1 }],
    "linebreak-style": ["error", "unix"],
    "quotes": ["error", "double"],
    "semi": ["error", "never"],
    "react/display-name": "off",
    "@tanstack/query/exhaustive-deps": "error",
    "@tanstack/query/prefer-query-object-syntax": "error"
  },
  "settings": {
    "react": {
      "fragment": "Fragment", // Fragment to use (may be a property of <pragma>), default to "Fragment"
      "version": "detect" // React version. "detect" automatically picks the version you have installed.
    }
  },
  "overrides": [
    {
      "files": ["*.ts", "*.tsx", "*.js", "*.jsx"],
      "rules": {
        "max-len": [
          "warn",
          {
            "code": 100,
            "tabWidth": 2
          }
        ],
        "@typescript-eslint/ban-types": 1,
        "simple-import-sort/imports": [
          "error",
          {
            "groups": [
              // `react` first, `next` second, then packages starting with a character
              ["^react$"],
              // other packages
              ["^[a-z]"],
              // Packages starting with `@/`,
              ["^(@/components|@/pages|@/layouts)(/.*|$)"],
              ["^@/"],
              // Utils from project
              ["^(@/utils)(/.*|$)", "^(./utils)(/.*|$)"],
              // Style imports
              ["^.+\\.s?css$", "^.+\\.s?styled$"],
              // Assets imports
              ["^@/assets/"],
              // Imports starting with `../`
              ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
              // Imports starting with `./`
              ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
              // Packages starting with `~`
              ["^~"],
              // Interface && Type -- last import
              ["^.*\\u0000$"],
              ["^\\u0000"],
              ["^@?\\w"],
              ["^"],
              ["^\\."]
            ]
          }
        ]
      }
    }
  ]
}
